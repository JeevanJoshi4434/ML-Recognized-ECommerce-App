/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/iezom48UXjD
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState, useMemo } from "react"
import Link from "next/link"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"

export function ItemListing() {
  const [searchTerm, setSearchTerm] = useState("")
  const [selectedCategory, setSelectedCategory] = useState("all")
  const products = [
    {
      id: 1,
      name: "Acme Prism T-Shirt",
      category: "Clothing",
      brand: "Acme",
      price: 29.99,
      image: "/placeholder.svg",
    },
    {
      id: 2,
      name: "Gamer Gear Pro Controller",
      category: "Electronics",
      brand: "Gamer Gear",
      price: 59.99,
      image: "/placeholder.svg",
    },
    {
      id: 3,
      name: "Sunset Beach Towel",
      category: "Accessories",
      brand: "Acme",
      price: 19.99,
      image: "/placeholder.svg",
    },
    {
      id: 4,
      name: "Luminous VR Headset",
      category: "Electronics",
      brand: "Luminous",
      price: 199.99,
      image: "/placeholder.svg",
    },
    {
      id: 5,
      name: "Sunset Beach Shorts",
      category: "Clothing",
      brand: "Acme",
      price: 34.99,
      image: "/placeholder.svg",
    },
    {
      id: 6,
      name: "AeroGlow Desk Lamp",
      category: "Home",
      brand: "AeroGlow",
      price: 39.99,
      image: "/placeholder.svg",
    },
  ]
  const filteredProducts = useMemo(() => {
    return products.filter((product) => {
      const searchMatch =
        product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        product.brand.toLowerCase().includes(searchTerm.toLowerCase()) ||
        product.category.toLowerCase().includes(searchTerm.toLowerCase())
      const categoryMatch = selectedCategory === "all" || product.category === selectedCategory
      return searchMatch && categoryMatch
    });
  }, [searchTerm, selectedCategory])
  return (
    (<div className="bg-background text-foreground">
      <header className="bg-primary text-primary-foreground py-4 px-6">
        <div className="container mx-auto flex items-center justify-between">
          <Link href="#" className="text-2xl font-bold" prefetch={false}>
            Acme Inc.
          </Link>
          <nav className="hidden md:flex items-center gap-6">
            <Link
              href="#"
              className="hover:text-primary-foreground/80 transition-colors"
              onClick={() => setSelectedCategory("all")}
              prefetch={false}>
              All
            </Link>
            <Link
              href="#"
              className="hover:text-primary-foreground/80 transition-colors"
              onClick={() => setSelectedCategory("Clothing")}
              prefetch={false}>
              Clothing
            </Link>
            <Link
              href="#"
              className="hover:text-primary-foreground/80 transition-colors"
              onClick={() => setSelectedCategory("Electronics")}
              prefetch={false}>
              Electronics
            </Link>
            <Link
              href="#"
              className="hover:text-primary-foreground/80 transition-colors"
              onClick={() => setSelectedCategory("Accessories")}
              prefetch={false}>
              Accessories
            </Link>
            <Link
              href="#"
              className="hover:text-primary-foreground/80 transition-colors"
              onClick={() => setSelectedCategory("Home")}
              prefetch={false}>
              Home
            </Link>
          </nav>
          <div className="relative">
            <div
              className="absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground" />
            <Input
              type="text"
              placeholder="Search products..."
              className="pl-10 pr-4 py-2 rounded-md bg-primary/20 focus:bg-primary/30 transition-colors"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)} />
          </div>
        </div>
      </header>
      <main className="py-8 px-4 md:px-6">
        <div className="container mx-auto">
          {Object.keys(filteredProducts.reduce((acc, product) => {
            acc[product.category] = true
            return acc
          }, {})).map((category) => (
            <div key={category} className="mb-8">
              <h2 className="text-2xl font-bold mb-4">{category === "all" ? "All Products" : category}</h2>
              <div
                className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                {filteredProducts
                  .filter((product) => product.category === category)
                  .map((product) => (
                    <div
                      key={product.id}
                      className="bg-card text-card-foreground rounded-md overflow-hidden shadow-md">
                      <img
                        src="/placeholder.svg"
                        alt={product.name}
                        width={300}
                        height={300}
                        className="w-full h-48 object-cover"
                        style={{ aspectRatio: "300/300", objectFit: "cover" }} />
                      <div className="p-4">
                        <h3 className="text-lg font-bold mb-2">{product.name}</h3>
                        <p className="text-muted-foreground mb-4">{product.brand}</p>
                        <div className="flex items-center justify-between">
                          <span className="text-primary font-bold">${product.price.toFixed(2)}</span>
                          <Button size="sm" variant="outline">
                            Quick View
                          </Button>
                        </div>
                      </div>
                    </div>
                  ))}
              </div>
            </div>
          ))}
        </div>
      </main>
    </div>)
  );
}
